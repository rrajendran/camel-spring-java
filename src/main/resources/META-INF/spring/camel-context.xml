<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
    <bean id="templateAggregationStrategy" class="com.capella.TemplateAggregationStrategy"/>
    <bean id="templateAggregationPredicate" class="com.capella.TemplateAggregationPredicate"/>
    <camelContext xmlns="http://camel.apache.org/schema/spring">
        <!-- here is a sample which processes the input files
             (leaving them in place - see the 'noop' flag)
             then performs content based routing on the message using XPath -->
        <route streamCache="true">
            <from uri="file:/Users/ramesh/dev/stash/github/camel-spring-java/src/data?noop=true"/>
            <log message="${in.header.CamelFileName}"/>

            <aggregate strategyRef="templateAggregationStrategy" strategyMethodName="aggregate">
                <correlationExpression>
                    <simple>in.header.CamelFileName</simple>
                </correlationExpression>
                <completionPredicate>
                    <method bean="templateAggregationPredicate" method="matches"/>
                </completionPredicate>
                <to uri="direct:processTemplates"/>
            </aggregate>

            <!--<choice>
                <when>
                    <xpath>/person/city = 'London'</xpath>
                    <log message="UK message"/>
                    <to uri="file:target/messages/uk"/>
                </when>
                <otherwise>
                    <log message="Other message"/>
                    <to uri="file:target/messages/others"/>
                </otherwise>
            </choice>-->
        </route>

        <route id="processTemplatesRoute">
            <from uri="direct:processTemplates"/>
            <log message="Processing message ${in.header.fileCount}"/>
        </route>
    </camelContext>

</beans>
